# Challenge 2
# Fixed XOR
# Write a function that takes two equal-length buffers and produces
# their XOR combination.

import base64
from basic_functions import *

encoding = "ascii"


def decode_hex(s):
    return codecs.getdecoder("hex_codec")(s)[0]


def encode_hex(s):
    return codecs.getencoder("hex_codec")(s)[0]


def decode_base64(s):
    return codecs.getencoder("base64_codec")(s)[0]


def encode_base64(s):
    return codecs.getencoder("base64_codec")(s)[0]


B = decode_hex("1c0111001f010100061a024b53535009181c")
C = decode_hex("686974207468652062756c6c277320657965")

# Assume x and y are the same length.
def xor_bytes(x, y):
    return bytes([x[i] ^ y[i] for i in range(len(x))])


foo = xor_bytes(B, C)
foo = encode_hex(foo)
combination = foo.decode(encoding)

print(combination)
